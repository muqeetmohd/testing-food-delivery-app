{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abdul.mohammed\\\\Downloads\\\\forTesting\\\\testing-app\\\\src\\\\components\\\\store\\\\UserProgressContext.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { createContext } from \"react\";\n\n//the reason we have two exports here is because while using context, typically we would require two exports(Context and Contextprovider).\n//the contextProvider is used a s a tag to wrap around components so that the context can be used in its children components.\n//the Context is used to directly access the state of the context variable.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserProgressContext = /*#__PURE__*/createContext({\n  progress: '',\n  showCart: () => {},\n  hideCart: () => {},\n  showCheckout: () => {},\n  hideCheckout: () => {},\n  orderSuccess: () => {},\n  closeOrderSuccess: () => {}\n});\nexport function UserProgressContextProvider({\n  children\n}) {\n  _s();\n  //provider component and a consumer component\n  const [userProgress, setUserProgress] = useState('');\n  function showCart() {\n    setUserProgress('cart');\n  }\n  function hideCart() {\n    setUserProgress('');\n  }\n  function showCheckout() {\n    setUserProgress('checkout');\n  }\n  function hideCheckout() {\n    setUserProgress('');\n  }\n  function orderSuccess() {\n    setUserProgress('Success');\n  }\n  function closeOrderSuccess() {\n    setUserProgress('');\n  }\n  const userProgressCtx = {\n    progress: userProgress,\n    showCart,\n    hideCart,\n    showCheckout,\n    hideCheckout,\n    orderSuccess,\n    closeOrderSuccess\n  };\n  return /*#__PURE__*/_jsxDEV(UserProgressContext.Provider, {\n    value: userProgressCtx,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n_s(UserProgressContextProvider, \"yzaDeGuN+t9sZeKORWOKoVpwtH0=\");\n_c = UserProgressContextProvider;\nexport default UserProgressContext;\nvar _c;\n$RefreshReg$(_c, \"UserProgressContextProvider\");","map":{"version":3,"names":["useState","createContext","jsxDEV","_jsxDEV","UserProgressContext","progress","showCart","hideCart","showCheckout","hideCheckout","orderSuccess","closeOrderSuccess","UserProgressContextProvider","children","_s","userProgress","setUserProgress","userProgressCtx","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/abdul.mohammed/Downloads/forTesting/testing-app/src/components/store/UserProgressContext.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { createContext } from \"react\";\r\n\r\n//the reason we have two exports here is because while using context, typically we would require two exports(Context and Contextprovider).\r\n//the contextProvider is used a s a tag to wrap around components so that the context can be used in its children components.\r\n//the Context is used to directly access the state of the context variable.\r\n\r\nconst UserProgressContext = createContext({ \r\n    progress:'',\r\n    showCart:()=>{},\r\n    hideCart:()=>{},\r\n    showCheckout:()=>{},\r\n    hideCheckout:()=>{},\r\n    orderSuccess:()=>{},\r\n    closeOrderSuccess:()=>{}\r\n});\r\n\r\nexport function UserProgressContextProvider({children}) { //provider component and a consumer component\r\n    const [userProgress, setUserProgress] = useState('');\r\n\r\n    function showCart() {\r\n        setUserProgress('cart');\r\n    }\r\n\r\n    function hideCart() {\r\n        setUserProgress('');\r\n    }\r\n\r\n    function showCheckout() {\r\n        setUserProgress('checkout');\r\n    }\r\n\r\n    function hideCheckout() {\r\n        setUserProgress('');\r\n    }\r\n\r\n    function orderSuccess(){\r\n        setUserProgress('Success');\r\n    }\r\n\r\n    function closeOrderSuccess(){\r\n        setUserProgress('');\r\n    }\r\n\r\n    const userProgressCtx = {\r\n        progress:userProgress,\r\n        showCart,\r\n        hideCart,\r\n        showCheckout,\r\n        hideCheckout,\r\n        orderSuccess,\r\n        closeOrderSuccess\r\n    }\r\n\r\n    return (\r\n        <UserProgressContext.Provider value = {userProgressCtx}>\r\n            {children}\r\n        </UserProgressContext.Provider>\r\n    );\r\n}\r\n\r\nexport default UserProgressContext;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,aAAa,QAAQ,OAAO;;AAErC;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,mBAAmB,gBAAGH,aAAa,CAAC;EACtCI,QAAQ,EAAC,EAAE;EACXC,QAAQ,EAACA,CAAA,KAAI,CAAC,CAAC;EACfC,QAAQ,EAACA,CAAA,KAAI,CAAC,CAAC;EACfC,YAAY,EAACA,CAAA,KAAI,CAAC,CAAC;EACnBC,YAAY,EAACA,CAAA,KAAI,CAAC,CAAC;EACnBC,YAAY,EAACA,CAAA,KAAI,CAAC,CAAC;EACnBC,iBAAiB,EAACA,CAAA,KAAI,CAAC;AAC3B,CAAC,CAAC;AAEF,OAAO,SAASC,2BAA2BA,CAAC;EAACC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EAAE;EACtD,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAEpD,SAASM,QAAQA,CAAA,EAAG;IAChBU,eAAe,CAAC,MAAM,CAAC;EAC3B;EAEA,SAAST,QAAQA,CAAA,EAAG;IAChBS,eAAe,CAAC,EAAE,CAAC;EACvB;EAEA,SAASR,YAAYA,CAAA,EAAG;IACpBQ,eAAe,CAAC,UAAU,CAAC;EAC/B;EAEA,SAASP,YAAYA,CAAA,EAAG;IACpBO,eAAe,CAAC,EAAE,CAAC;EACvB;EAEA,SAASN,YAAYA,CAAA,EAAE;IACnBM,eAAe,CAAC,SAAS,CAAC;EAC9B;EAEA,SAASL,iBAAiBA,CAAA,EAAE;IACxBK,eAAe,CAAC,EAAE,CAAC;EACvB;EAEA,MAAMC,eAAe,GAAG;IACpBZ,QAAQ,EAACU,YAAY;IACrBT,QAAQ;IACRC,QAAQ;IACRC,YAAY;IACZC,YAAY;IACZC,YAAY;IACZC;EACJ,CAAC;EAED,oBACIR,OAAA,CAACC,mBAAmB,CAACc,QAAQ;IAACC,KAAK,EAAIF,eAAgB;IAAAJ,QAAA,EAClDA;EAAQ;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACiB,CAAC;AAEvC;AAACT,EAAA,CA1CeF,2BAA2B;AAAAY,EAAA,GAA3BZ,2BAA2B;AA4C3C,eAAeR,mBAAmB;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}